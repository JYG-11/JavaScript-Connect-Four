    function checkBoard() {
        let consequetive_p1 = 1;
        let consequetive_p2 = 1;

        for (let x = 0; x < squares.length; x++) {
            if (squares[x].classList.contains('player-one') && squares[x+1].classList.contains('player-one') && ((x+1)%7 != 0)) {
                consequetive_p1++
                if (consequetive_p1 === 4) {
                    alert('Player one wins!')
                    break;
                }
            } else {
                consequetive_p1 = 1
            }
            if (squares[x].classList.contains('player-two') && squares[x+1].classList.contains('player-two') && ((x+1)%7 != 0)) {
                consequetive_p2++
                if (consequetive_p2 === 4) {
                    alert('Player two wins!')
                    break;
                }
            } else {
                consequetive_p2 = 1
            }
        }

        consequetive_p1 = 1;
        consequetive_p2 = 1;

        for (let y = 0; y < squares.length; y++) {
            if (squares[y].classList.contains('player-one') && squares[y+7].classList.contains('player-one')) {
                consequetive_p1++
                if (consequetive_p1 === 4) {
                    alert('Player one wins!')
                    break;
                }
            } else {
                consequetive_p1 = 1
            }
            if (squares[y].classList.contains('player-two') && squares[y+7].classList.contains('player-two')) {
                consequetive_p2++
                if (consequetive_p2 === 4) {
                    alert('Player two wins!')
                    break;
                }
            } else {
                consequetive_p2 = 1
            }
        }

        consequetive_p1 = 1;
        consequetive_p2 = 1;

        for (let z = 0; z < squares.length; z++) {
            if (squares[z].classList.contains('player-one') && squares[z+8].classList.contains('player-one')) {
                consequetive_p1++
                if (consequetive_p1 === 4) {
                    alert('Player one wins!')
                    break;
                }
            } else {
                consequetive_p1 = 1
            }
            if (squares[z].classList.contains('player-two') && squares[z+8].classList.contains('player-two')) {
                consequetive_p2++
                if (consequetive_p2 === 4) {
                    alert('Player two wins!')
                    break;
                }
            } else {
                consequetive_p2 = 1
            }
        }

        consequetive_p1 = 1;
        consequetive_p2 = 1;

        for (let z = 0; z < squares.length; z++) {
            if (squares[z].classList.contains('player-one') && squares[z+6].classList.contains('player-one')) {
                consequetive_p1++
                if (consequetive_p1 === 4) {
                    alert('Player one wins!')
                    break;
                }
            } else {
                consequetive_p1 = 1
            }
            if (squares[z].classList.contains('player-two') && squares[z+6].classList.contains('player-two')) {
                consequetive_p2++
                if (consequetive_p2 === 4) {
                    alert('Player two wins!')
                    break;
                }
            } else {
                consequetive_p2 = 1
            }
        }
    }